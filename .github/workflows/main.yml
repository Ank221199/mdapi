---
name: mdapi
on: [push, pull_request, workflow_dispatch]
jobs:
  ci-basic:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.8", "3.9", "3.10"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install the base dependencies
        run: |
             python3 -m pip install --upgrade poetry

      - name: Check the correctness of the project config
        run: |
             poetry check

      - name: Install the project
        run: |
             poetry config virtualenvs.create false
             poetry install

      - name: Check the quality of the code
        run: |
             tox -e black,flake8,isort

  ci-tests:
    strategy:
      fail-fast: false
      matrix:
        tox-env: ["py38", "py39", "py310"]
    runs-on: ubuntu-latest
    container: fedorapython/fedora-python-tox:latest
    steps:
      - uses: actions/checkout@v3

      - name: Install the base dependencies
        run: |
             python3 -m pip install --upgrade poetry

      - name: Check the correctness of the project config
        run: |
             poetry check

      - name: Install the project
        run: |
             poetry config virtualenvs.create false
             poetry install      

      - name: Set up user for running the testcases
        run: |
             useradd testrunner
             chown -R testrunner .

      - name: Execute tox
        run: |
             su testrunner -c "tox -e ${{ matrix.tox-env }}"
